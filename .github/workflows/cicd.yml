name: Deploy To EC2

on:
  push:
    branches:
      - main

env:
  TZ: Asia/Seoul

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.TEST_DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: Create resources/upload directory for tests
        run: mkdir -p ./src/test/resources/uploads

      - name: application-test.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > ./src/test/resources/application-test.yml

      - name: 테스트하기
        run: |
          chmod +x ./gradlew
          ./gradlew test -Dspring.profiles.active=test

      - name: 빌드하기
        run: ./gradlew clean build -x test

      - name: Docker build & push to Docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/beour-repo .
          docker push ${{ secrets.DOCKER_USERNAME }}/beour-repo

      # EC2 배포
      - name: Docker image pull & Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            # 업로드 폴더 생성
            mkdir -p /home/ubuntu/uploads && chmod 777 /home/ubuntu/uploads

            # 기존 컨테이너 중지 및 삭제
            docker stop beour-repo || true
            docker rm beour-repo || true

            # 최신 이미지 pull 및 실행
            docker pull ${{ secrets.DOCKER_USERNAME }}/beour-repo:latest
            docker run -d --name beour-repo -p 8080:8080 \
              -v /home/ubuntu/uploads:/home/ubuntu/uploads \
              ${{ secrets.DOCKER_USERNAME }}/beour-repo:latest
